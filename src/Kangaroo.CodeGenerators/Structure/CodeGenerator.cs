// This file is licensed to you under the MIT license.
// See the LICENSE file in the project root for full license information.
// <autogenerated>

namespace Kangaroo.CodeGenerators.Structure
{
    using System;
    using System.Collections.Generic;
    using System.ComponentModel;
    using System.Text;
    using System.Xml.Serialization;

    #region Root
    [XmlRoot]
    public class CodeGenerator
    {
        [XmlElement]
        public List<Entity> Entity { get; set; } = new List<Entity>();

        [XmlElement]
        public List<Summary> Summary { get; set; } = new List<Summary>();

        [XmlElement]
        public List<EnumEntity> Enum { get; set; } = new List<EnumEntity>();

        [XmlElement]
        public List<CustomRequest> CustomRequest { get; set; } = new List<CustomRequest>();

        [XmlElement]
        public List<CustomResponse> CustomResponse { get; set; } = new List<CustomResponse>();
    }
    #endregion Root

    #region Entities
    public enum Location
    {
        Both = 0,
        Backend = 1,
        Frontend = 2,
    }

    public enum AutoMapperSourceType
    {
        DatabaseEntity = 0,
        Entity = 1,
    }

    [XmlRoot]
    public class Entity
    {
        [XmlAttribute]
        public string Name { get; set; }

        [XmlAttribute]
        public string PluralName { get; set; }

        [XmlAttribute]
        [DefaultValue(Location.Both)]
        public Location Location { get; set; } = Location.Both;

        [XmlElement]
        public Fields EntityFields { get; set; }

        [XmlAttribute]
        [DefaultValue(true)]
        public bool IncludeAuditLog { get; set; } = true;

        [XmlAttribute]
        [DefaultValue(true)]
        public bool IncludeRowVersionControl { get; set; } = true;

        [XmlAttribute]
        [DefaultValue(true)]
        public bool IncludeDataState { get; set; } = true;

        [XmlElement]
        public GenerateDatabaseEntity GenerateDatabaseEntity { get; set; }

        [XmlElement]
        public List<GenerateAutoMapper> GenerateAutoMapper { get; set; } = new List<GenerateAutoMapper>();

        [XmlElement]
        public GenerateEntityHandlerRequest GenerateEntityHandlerRequest { get; set; }

        [XmlElement]
        public GenerateEntityGetterRequest GenerateEntityGetterRequest { get; set; }

        [XmlElement]
        public GenerateEntitiesGetterRequest GenerateEntitiesGetterRequest { get; set; }

        [XmlElement]
        public AdditionalUsings AdditionalUsings { get; set; }

        [XmlElement]
        public CustomAttributes CustomAttributes { get; set; }
    }

    [XmlRoot]
    public class Summary
    {
        [XmlAttribute]
        public string Name { get; set; }

        [XmlAttribute]
        public string PluralName { get; set; }

        [XmlAttribute]
        [DefaultValue(Location.Both)]
        public Location Location { get; set; } = Location.Both;

        [XmlElement]
        public Fields SummaryFields { get; set; }

        [XmlAttribute]
        [DefaultValue(false)]
        public bool IncludeAuditLog { get; set; } = false;

        [XmlAttribute]
        [DefaultValue(false)]
        public bool IncludeRowVersionControl { get; set; } = false;

        [XmlAttribute]
        public string DatabaseEntityName { get; set; }

        [XmlElement]
        public List<GenerateAutoMapper> GenerateAutoMapper { get; set; } = new List<GenerateAutoMapper>();

        [XmlElement]
        public GenerateSummaryGetterRequest GenerateSummaryGetterRequest { get; set; }

        [XmlElement]
        public GenerateSummariesGetterRequest GenerateSummariesGetterRequest { get; set; }

        [XmlElement]
        public AdditionalUsings AdditionalUsings { get; set; }

        [XmlElement]
        public CustomAttributes CustomAttributes { get; set; }
    }

    [XmlRoot]
    public class CustomRequest
    {
        [XmlAttribute]
        public string Name { get; set; }

        [XmlAttribute]
        [DefaultValue(Location.Both)]
        public Location Location { get; set; } = Location.Both;

        [XmlElement]
        public Fields RequestFields { get; set; }

        [XmlElement]
        public AdditionalUsings AdditionalUsings { get; set; }

        [XmlElement]
        public CustomAttributes CustomAttributes { get; set; }
    }

    [XmlRoot]
    public class CustomResponse
    {
        [XmlAttribute]
        public string Name { get; set; }

        [XmlAttribute]
        [DefaultValue(Location.Both)]
        public Location Location { get; set; } = Location.Both;

        [XmlElement]
        public Fields ResponseFields { get; set; }

        [XmlElement]
        public AdditionalUsings AdditionalUsings { get; set; }

        [XmlElement]
        public CustomAttributes CustomAttributes { get; set; }
    }

    [XmlRoot]
    public class GenerateDatabaseEntity
    {
        [XmlElement]
        public Fields AdditionalFields { get; set; }

        [XmlElement]
        public IgnoreFields IgnoreFields { get; set; }

        [XmlElement]
        public ForeignKeyFields ForeignKeyFields { get; set; }

        [XmlElement]
        public GenerateDatabaseEntityConfiguration GenerateDatabaseEntityConfiguration { get; set; }

        [XmlElement]
        public AdditionalUsings AdditionalUsings { get; set; }

        [XmlElement]
        public CustomAttributes CustomAttributes { get; set; }
    }

    [XmlRoot]
    public class GenerateDatabaseEntityConfiguration
    {
        [XmlElement]
        public Indexes Indexes { get; set; }

        [XmlElement]
        public AdditionalUsings AdditionalUsings { get; set; }

        [XmlElement]
        public CustomAttributes CustomAttributes { get; set; }
    }

    [XmlRoot]
    public class Indexes
    {
        [XmlElement]
        public List<IndexField> IndexField { get; set; } = new List<IndexField>();
    }

    [XmlRoot]
    public class IndexField
    {
        [XmlAttribute]
        public string FieldName { get; set; }
    }

    [XmlRoot]
    public class GenerateAutoMapper
    {
        [XmlAttribute]
        [DefaultValue("")]
        public string DatabaseEntityName { get; set; } = "";

        [XmlElement]
        [DefaultValue(AutoMapperSourceType.Entity)]
        public AutoMapperSourceType AutoMapperSourceType { get; set; } = AutoMapperSourceType.Entity;

        [XmlElement]
        public IgnoreFields IgnoreFields { get; set; }

        [XmlElement]
        public AdditionalUsings AdditionalUsings { get; set; }

        [XmlElement]
        public CustomAttributes CustomAttributes { get; set; }
    }

    [XmlRoot]
    public class GenerateEntityHandlerRequest
    {
        [XmlElement]
        public Fields AdditionalFields { get; set; }

        [XmlElement]
        public GenerateController GenerateController { get; set; }

        [XmlElement]
        public GenerateEntityHandlerService GenerateEntityHandlerService { get; set; }

        [XmlElement]
        public AdditionalUsings AdditionalUsings { get; set; }

        [XmlElement]
        public CustomAttributes CustomAttributes { get; set; }
    }

    [XmlRoot]
    public class GenerateEntityGetterRequest
    {
        [XmlElement]
        public Fields AdditionalFields { get; set; }

        [XmlElement]
        public GenerateController GenerateController { get; set; }

        [XmlElement]
        public GenerateEntityGetterService GenerateEntityGetterService { get; set; }

        [XmlElement]
        public AdditionalUsings AdditionalUsings { get; set; }

        [XmlElement]
        public CustomAttributes CustomAttributes { get; set; }
    }

    [XmlRoot]
    public class GenerateEntitiesGetterRequest
    {
        [XmlElement]
        public Fields RequestFields { get; set; }

        [XmlElement]
        public GenerateController GenerateController { get; set; }

        [XmlElement]
        public GenerateEntitiesGetterService GenerateEntitiesGetterService { get; set; }

        [XmlElement]
        public AdditionalUsings AdditionalUsings { get; set; }

        [XmlElement]
        public CustomAttributes CustomAttributes { get; set; }
    }

    [XmlRoot]
    public class GenerateSummaryGetterRequest
    {
        [XmlElement]
        public Fields AdditionalFields { get; set; }

        [XmlElement]
        public GenerateController GenerateController { get; set; }

        [XmlElement]
        public GenerateSummaryGetterService GenerateSummaryGetterService { get; set; }

        [XmlElement]
        public AdditionalUsings AdditionalUsings { get; set; }

        [XmlElement]
        public CustomAttributes CustomAttributes { get; set; }
    }

    [XmlRoot]
    public class GenerateSummariesGetterRequest
    {
        [XmlElement]
        public Fields RequestFields { get; set; }

        [XmlElement]
        public GenerateController GenerateController { get; set; }

        [XmlElement]
        public GenerateSummariesGetterService GenerateSummariesGetterService { get; set; }

        [XmlElement]
        public AdditionalUsings AdditionalUsings { get; set; }

        [XmlElement]
        public CustomAttributes CustomAttributes { get; set; }
    }

    [XmlRoot]
    public class GenerateController
    {
        [XmlAttribute]
        [DefaultValue("")]
        public string UseExistingInterfaceServiceName { get; set; } = "";

        [XmlAttribute]
        [DefaultValue("")]
        public string UseExistingServiceMethodName { get; set; } = "";

        [XmlAttribute]
        [DefaultValue(true)]
        public bool GenerateAPIClient { get; set; } = true;

        [XmlAttribute]
        [DefaultValue(true)]
        public bool IsAuthenticationRequired { get; set; } = true;

        [XmlElement]
        public Permissions Permissions { get; set; }

        [XmlElement]
        public AdditionalUsings AdditionalUsings { get; set; }

        [XmlElement]
        public CustomAttributes CustomAttributes { get; set; }
    }

    [XmlRoot]
    public class GenerateEntityHandlerService
    {
        [XmlAttribute]
        [DefaultValue("")]
        public string DatabaseEntityName { get; set; } = "";

        [XmlAttribute]
        [DefaultValue(true)]
        public bool IsDatabaseEntityHandler { get; set; } = true;

        [XmlElement]
        public AdditionalUsings AdditionalUsings { get; set; }

        [XmlElement]
        public CustomAttributes CustomAttributes { get; set; }
    }

    [XmlRoot]
    public class GenerateEntityGetterService
    {
        [XmlElement]
        public AdditionalUsings AdditionalUsings { get; set; }

        [XmlElement]
        public CustomAttributes CustomAttributes { get; set; }
    }

    [XmlRoot]
    public class GenerateEntitiesGetterService
    {
        [XmlElement]
        public AdditionalUsings AdditionalUsings { get; set; }

        [XmlElement]
        public CustomAttributes CustomAttributes { get; set; }
    }

    [XmlRoot]
    public class GenerateSummaryGetterService
    {
        [XmlElement]
        public AdditionalUsings AdditionalUsings { get; set; }

        [XmlElement]
        public CustomAttributes CustomAttributes { get; set; }
    }

    [XmlRoot]
    public class GenerateSummariesGetterService
    {
        [XmlElement]
        public AdditionalUsings AdditionalUsings { get; set; }

        [XmlElement]
        public CustomAttributes CustomAttributes { get; set; }
    }

    [XmlRoot]
    public class AdditionalUsings
    {
        [XmlElement]
        public List<Using> Using { get; set; } = new List<Using>();
    }

    [XmlRoot]
    public class Using
    {
        [XmlAttribute]
        public string Content { get; set; }
    }

    [XmlRoot]
    public class Permissions
    {
        [XmlElement]
        public List<Permission> Permission { get; set; } = new List<Permission>();
    }

    [XmlRoot]
    public class Permission
    {
        [XmlAttribute]
        public string Name { get; set; }
    }
    #endregion Entities

    #region Fields
    public enum KeyType
    {
        Int = 0,
        Guid = 1,
    }

    public interface IField
    {
        string Name { get; set; }

        Location Location { get; set; }

        CustomAttributes CustomAttributes { get; set; }
    }

    public interface ICanBeRequired
    {
        bool IsRequired { get; set; }
    }

    public interface IDatabaseEntityField
    {
    }

    public interface INativeField : IField, ICanBeRequired, IDatabaseEntityField
    {
    }

    public interface ITypedField : IField, ICanBeRequired
    {
        string Type { get; set; }
    }

    [XmlRoot]
    public class Fields
    {
        [XmlElement]
        public KeyField KeyField { get; set; }

        [XmlElement]
        public List<StringField> StringField { get; set; } = new List<StringField>();

        [XmlElement]
        public List<BoolField> BoolField { get; set; } = new List<BoolField>();

        [XmlElement]
        public List<DateTimeField> DateTimeField { get; set; } = new List<DateTimeField>();

        [XmlElement]
        public List<DateTimeOffsetField> DateTimeOffsetField { get; set; } = new List<DateTimeOffsetField>();

        [XmlElement]
        public List<DecimalField> DecimalField { get; set; } = new List<DecimalField>();

        [XmlElement]
        public List<IntField> IntField { get; set; } = new List<IntField>();

        [XmlElement]
        public List<CollectionField> CollectionField { get; set; } = new List<CollectionField>();

        [XmlElement]
        public List<EntityCollectionField> EntityCollectionField { get; set; } = new List<EntityCollectionField>();

        [XmlElement]
        public List<SummaryField> SummaryField { get; set; } = new List<SummaryField>();

        [XmlElement]
        public List<EnumField> EnumField { get; set; } = new List<EnumField>();

        [XmlElement]
        public List<EntityField> EntityField { get; set; } = new List<EntityField>();
    }

    [XmlRoot]
    public class KeyField : IField, IDatabaseEntityField
    {
        [XmlAttribute]
        public string Name { get; set; }

        [XmlAttribute]
        [DefaultValue(Location.Both)]
        public Location Location { get; set; } = Location.Both;

        [XmlAttribute]
        public KeyType KeyType { get; set; }

        [XmlElement]
        public CustomAttributes CustomAttributes { get; set; }
    }

    [XmlRoot]
    public class StringField : INativeField
    {
        [XmlAttribute]
        public string Name { get; set; }

        [XmlAttribute]
        [DefaultValue(Location.Both)]
        public Location Location { get; set; } = Location.Both;

        [XmlAttribute]
        [DefaultValue(false)]
        public bool IsRequired { get; set; } = false;

        [XmlAttribute]
        [DefaultValue("")]
        public string DefaultValue { get; set; } = "";

        [XmlAttribute]
        [DefaultValue(255)]
        public int MaxLength { get; set; } = 255;

        [XmlElement]
        public CustomAttributes CustomAttributes { get; set; }
    }

    [XmlRoot]
    public class BoolField : INativeField
    {
        [XmlAttribute]
        public string Name { get; set; }

        [XmlAttribute]
        [DefaultValue(Location.Both)]
        public Location Location { get; set; } = Location.Both;

        [XmlAttribute]
        [DefaultValue(false)]
        public bool IsRequired { get; set; } = false;

        [XmlAttribute]
        [DefaultValue(false)]
        public bool DefaultValue { get; set; } = false;

        [XmlElement]
        public CustomAttributes CustomAttributes { get; set; }
    }

    [XmlRoot]
    public class DateTimeField : INativeField
    {
        [XmlAttribute]
        public string Name { get; set; }

        [XmlAttribute]
        [DefaultValue(Location.Both)]
        public Location Location { get; set; } = Location.Both;

        [XmlAttribute]
        [DefaultValue(false)]
        public bool IsRequired { get; set; } = false;

        [XmlElement]
        public CustomAttributes CustomAttributes { get; set; }
    }

    [XmlRoot]
    public class DateTimeOffsetField : INativeField
    {
        [XmlAttribute]
        public string Name { get; set; }

        [XmlAttribute]
        [DefaultValue(Location.Both)]
        public Location Location { get; set; } = Location.Both;

        [XmlAttribute]
        [DefaultValue(false)]
        public bool IsRequired { get; set; } = false;

        [XmlElement]
        public CustomAttributes CustomAttributes { get; set; }
    }

    [XmlRoot]
    public class DecimalField : INativeField
    {
        [XmlAttribute]
        public string Name { get; set; }

        [XmlAttribute]
        [DefaultValue(Location.Both)]
        public Location Location { get; set; } = Location.Both;

        [XmlAttribute]
        [DefaultValue(false)]
        public bool IsRequired { get; set; } = false;

        [XmlAttribute]
        [DefaultValue(typeof(decimal), "0")]
        public decimal DefaultValue { get; set; } = 0;

        [XmlAttribute]
        public int Precision { get; set; }

        [XmlAttribute]
        public int Scale { get; set; }

        [XmlElement]
        public CustomAttributes CustomAttributes { get; set; }
    }

    [XmlRoot]
    public class IntField : INativeField
    {
        [XmlAttribute]
        public string Name { get; set; }

        [XmlAttribute]
        [DefaultValue(Location.Both)]
        public Location Location { get; set; } = Location.Both;

        [XmlAttribute]
        [DefaultValue(false)]
        public bool IsRequired { get; set; } = false;

        [XmlAttribute]
        [DefaultValue(0)]
        public int DefaultValue { get; set; } = 0;

        [XmlElement]
        public CustomAttributes CustomAttributes { get; set; }
    }

    [XmlRoot]
    public class CollectionField : ITypedField
    {
        [XmlAttribute]
        public string Name { get; set; }

        [XmlAttribute]
        [DefaultValue(Location.Both)]
        public Location Location { get; set; } = Location.Both;

        [XmlAttribute]
        [DefaultValue(false)]
        public bool IsRequired { get; set; } = false;

        [XmlAttribute]
        public string Type { get; set; }

        [XmlElement]
        public CustomAttributes CustomAttributes { get; set; }
    }

    [XmlRoot]
    public class EntityCollectionField : ITypedField, IDatabaseEntityField
    {
        [XmlAttribute]
        public string Name { get; set; }

        [XmlAttribute]
        [DefaultValue(Location.Both)]
        public Location Location { get; set; } = Location.Both;

        [XmlAttribute]
        [DefaultValue(false)]
        public bool IsRequired { get; set; } = false;

        [XmlAttribute]
        public string Type { get; set; }

        [XmlElement]
        public CustomAttributes CustomAttributes { get; set; }
    }

    [XmlRoot]
    public class SummaryField : ITypedField
    {
        [XmlAttribute]
        public string Name { get; set; }

        [XmlAttribute]
        [DefaultValue(Location.Both)]
        public Location Location { get; set; } = Location.Both;

        [XmlAttribute]
        [DefaultValue(false)]
        public bool IsRequired { get; set; } = false;

        [XmlAttribute]
        public string Type { get; set; }

        [XmlAttribute]
        [DefaultValue("")]
        public string IsSummaryFor { get; set; } = "";

        [XmlElement]
        public CustomAttributes CustomAttributes { get; set; }
    }

    [XmlRoot]
    public class EnumField : ITypedField
    {
        [XmlAttribute]
        public string Name { get; set; }

        [XmlAttribute]
        [DefaultValue(Location.Both)]
        public Location Location { get; set; } = Location.Both;

        [XmlAttribute]
        [DefaultValue(false)]
        public bool IsRequired { get; set; } = false;

        [XmlAttribute]
        public string Type { get; set; }

        [XmlAttribute]
        [DefaultValue("")]
        public string IsEnumFor { get; set; } = "";

        [XmlElement]
        public CustomAttributes CustomAttributes { get; set; }
    }

    [XmlRoot]
    public class EntityField : ITypedField, IDatabaseEntityField
    {
        [XmlAttribute]
        public string Name { get; set; }

        [XmlAttribute]
        [DefaultValue(Location.Both)]
        public Location Location { get; set; } = Location.Both;

        [XmlAttribute]
        [DefaultValue(false)]
        public bool IsRequired { get; set; } = false;

        [XmlAttribute]
        public string Type { get; set; }

        [XmlElement]
        public CustomAttributes CustomAttributes { get;set; }
    }

    [XmlRoot]
    public class IgnoreFields
    {
        [XmlElement]
        public List<IgnoreField> IgnoreField { get; set; } = new List<IgnoreField>();
    }

    [XmlRoot]
    public class IgnoreField
    {
        [XmlAttribute]
        public string Name { get; set; }
    }

    [XmlRoot]
    public class ForeignKeyFields
    {
        [XmlElement]
        public List<ForeignKeyField> ForeignKeyField { get; set; } = new List<ForeignKeyField>();
    }

    [XmlRoot]
    public class ForeignKeyField
    {
        [XmlAttribute]
        public string EntityFieldName { get; set; }

        [XmlAttribute]
        public string IsForeignKeyFor { get; set; }
    }
    #endregion Fields

    #region Enums
    [XmlRoot]
    public class EnumEntity
    {
        [XmlAttribute]
        public string Name { get; set; }

        [XmlAttribute]
        [DefaultValue(Location.Both)]
        public Location Location { get; set; } = Location.Both;

        [XmlElement]
        public List<EnumValue> EnumValue { get; set; } = new List<EnumValue>();

        [XmlAttribute]
        [DefaultValue(false)]
        public bool AutoGenSequenceNumber { get; set; } = false;

        [XmlElement]
        public AdditionalUsings AdditionalUsings { get; set; }

        [XmlElement]
        public CustomAttributes CustomAttributes { get; set; }
    }

    [XmlRoot]
    public class EnumValue
    {
        [XmlAttribute]
        public string Name { get; set; }

        [XmlAttribute]
        [DefaultValue(Location.Both)]
        public Location Location { get; set; } = Location.Both;

        [XmlAttribute]
        [DefaultValue("")]
        public string DefaultValue { get; set; } = "";
    }
    #endregion Enums

    #region CustomAttributes
    [XmlRoot]
    public class CustomAttributes
    {
        [XmlElement]
        public List<CustomAttribute> CustomAttribute { get; set; } = new List<CustomAttribute>();
    }

    [XmlRoot]
    public class CustomAttribute
    {
        [XmlAttribute]
        public string Attribute { get; set; }

        [XmlAttribute]
        [DefaultValue(Location.Both)]
        public Location Location { get; set; } = Location.Both;
    }
    #endregion CustomAttributes
}
